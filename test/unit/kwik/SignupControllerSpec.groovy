package kwikimport grails.plugins.springsecurity.SpringSecurityServiceimport grails.test.mixin.Mockimport spock.lang.Specification@Mock(User)
class SignupControllerSpec extends Specification {		def setup() {		controller.springSecurityService = Mock(SpringSecurityService)	}	def "should create an user"() {		given:		controller.springSecurityService.encodePassword("1234") >> "encoded password"				when:		controller.create("user@email.com", "1234")				then: 		def user = User.findByUsername("user@email.com")		user.username == "user@email.com"		user.password == "encoded password"		user.enabled == true		user.accountExpired == false		user.accountLocked == false		user.passwordExpired == false	}		def "should fail when trying to create an user that already exists"() {		when:		controller.create("user@email.com", "1234")		controller.create("user@email.com", "5678")				then: 		thrown Exception			}		def "should thrown an exception if ther username is empty"() {		when:		controller.create(null, "1234")				then:		thrown Exception	}		def "should thrown an exception if ther password is empty"() {		when:		controller.create("username@email.com", null)				then:		thrown Exception	}}
